{
	// Place your snippets for c here. Each snippet is defined under a snippet name and has a prefix, body and
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Initialize Main": {
		"prefix": "start",
		"body": [
			"#include <stdio.h>",
			"",
			"typedef unsigned long long u64;",
			"",
			"$1",
			"int main(void) {",
			"\t$0",
			"\treturn 0;",
			"}"
		],
		"description": "start code snipet"
	},
	"printf": {
		"prefix": "sysout",
		"body": [
			"printf(\"$1\\n\", $2);",
			"$0"
		],
		"description": "printf and formatting"
	},
	"For loop": {
		"prefix": "for",
		"body": [
			"for (int ${1:i}=${2:0}; ${1:idx}<${3:size}; ++${1:i}) {",
			"\t$0",
			"}"
		],
		"description": "for loop snipet"
	},
	"printk-debug": {
		"prefix": "debugk",
		"body": [
			"printk(\"DEBUG: $1\\n\"$2);\t\t\/\/ DEBUG"
		],
		"description": "printk debugging"
	},
	"printf-debug": {
		"prefix": "debugf",
		"body": [
			"printf(\"DEBUG: $1\\n\"$2);\t\t\/\/ DEBUG"
		],
		"description": "printf debugging"
	},
}
