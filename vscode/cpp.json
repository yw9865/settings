{
	// Place your snippets for cpp here. Each snippet is defined under a snippet name and has a prefix, body and
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Initialize Main": {
		"prefix": "start",
		"body": [
		  "#include <iostream>",
		  "using namespace std;",
		  "",
		  "$1",
		  "",
		  "int main() {",
		  "\t$0",
		  "\treturn 0;",
		  "}"
		],
		"description": "start code snipet"
	  },

	  "ps start": {
		"prefix": "ps",
		"body": [
		  "#include <bits/stdc++.h>",
		  "using namespace std;",
		  "",
		  "int main() {",
		  "\tios::sync_with_stdio(0);",
		  "\tcin.tie(0);",
		  "\tcout.tie(0);",
		  "\t$0",
		  "\treturn 0;",
		  "}"
		],
		"description": "ps start code snipet"
	  },

	  "std out": {
		"prefix": "cout",
		"body": [
		  "cout << $1 << endl;",
		  "$0"
		],
		"description": "cout snipet"
	  },

	  "For loop": {
		"prefix": "for",
		"body": [
		  "for (size_t ${1:i}=${2:0}; ${1:idx}<${3:size}; ++${1:i}) {",
		  "\t$0",
		  "}"
		],
		"description": "for loop snipet"
	  },

	  "For each loop": {
		"prefix": "foreach",
		"body": [
		  "for (const auto ${2:element} : ${1:container}) {",
		  "\t$0",
		  "}"
		],
		"description": "foreach loop snipet"
	  },

	  "For const loop": {
		"prefix": "forconst",
		"body": [
		  "for (const ${2:element} of ${1:array}) {",
		  "\t$0",
		  "}"
		],
		"description": "for-const loop snipet"
	  },

	  "printf": {
		"prefix": "sysout",
		"body": [
			"printf(\"$1\\n\", $2);",
			"$0"
		],
		"description": "printf and formatting"
	  }
}
